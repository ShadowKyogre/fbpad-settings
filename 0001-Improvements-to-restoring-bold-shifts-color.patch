From c89aaa9c88cee3242ac754933b3eed1e61f38881 Mon Sep 17 00:00:00 2001
From: ShadowKyogre <shadowkyogre.public@gmail.com>
Date: Thu, 5 May 2016 18:51:48 -0700
Subject: [PATCH] Improvements to restoring bold shifts color

To use linux console style rendering, define BOLD_SHIFTS_COLOR. This
will shift the color regardless if it's done through a 30-37;1 code or
through directly specifying the color regardless of whether a font
exists for bolding

To use xterm style rendering, undefine BOLD_SHIFTS_COLOR. This will
shift the color when bold if it's specified only through a 30-37;1 code.
---
 fbpad.h |  3 ++-
 pad.c   | 37 +++++++++++++++++++++++++++++++------
 term.c  |  2 ++
 3 files changed, 35 insertions(+), 7 deletions(-)

diff --git a/fbpad.h b/fbpad.h
index 9111c7a..b65e78d 100644
--- a/fbpad.h
+++ b/fbpad.h
@@ -53,7 +53,8 @@ int  clrmap(int c);
 /* pad.c */
 #define FN_I		0x01000000	/* italic font */
 #define FN_B		0x02000000	/* bold font */
-#define FN_IS16	0x04000000	/* are we a 16 color? */
+#define FN_IS16		0x04000000	/* are we a 16 color? */
+#define FN_FROM8CODE	0x08000000	/* are we from a 30-37,40-47 code? */
 #define FN_C		0x00ffffff	/* font color mask */
 #define FN_16PAL	0xf0000000	/* 16 color value */
 
diff --git a/pad.c b/pad.c
index a9b813c..cf69aa8 100644
--- a/pad.c
+++ b/pad.c
@@ -133,18 +133,43 @@ static int fnsel(int fg, int bg)
 	return 0;
 }
 
+int bold_shifts_color(int fg)
+{
+	int is_16pal = (fg & FN_IS16);
+	int orig_color_num_raw = (unsigned int)(fg & FN_16PAL);
+	int orig_color_num = (orig_color_num_raw >> 28);
+	if (orig_color_num < 0) {
+		orig_color_num = 16 + orig_color_num;
+	}
+	#ifndef BOLD_SHIFTS_COLOR
+	int from_8code = (fg & FN_FROM8CODE);
+	#endif
+
+	#ifdef BOLD_SHIFTS_COLOR
+	if (is_16pal && (orig_color_num < 8))
+	#else
+	if ((from_8code || !fonts[2]) && is_16pal && (orig_color_num < 8))
+	#endif
+	{
+		/* preserve original metadata */
+		fg = orig_color_num_raw|FN_FROM8CODE|FN_IS16|FN_B;
+		/* now shift the color to the next higher tier */
+		fg |= clrmap(orig_color_num + 8);
+	}
+
+	return fg;
+}
+
 void pad_put(int ch, int r, int c, int fg, int bg)
 {
 	int sr = fnrows * r;
 	int sc = fncols * c;
 	fbval_t *bits;
 	int i;
-	#ifdef BOLD_SHIFTS_COLOR
-	if ((fg & FN_B) && (fg & FN_IS16) && ((fg & FN_16PAL) >> 28) < 8)
-	#else
-	if ((fg & FN_B) && !fonts[2] && (fg & FN_IS16) && ((fg & FN_16PAL) >> 28) < 8)
-	#endif
-		fg = (fg & FN_16PAL)|FN_IS16|FN_B|clrmap(((fg & FN_16PAL) >> 28) + 8);
+
+	if (fg & FN_B)
+		fg = bold_shifts_color(fg);
+
 	bits = ch2fb(fnsel(fg, bg), ch, fg, bg);
 	if (!bits)
 		bits = ch2fb(0, ch, fg, bg);
diff --git a/term.c b/term.c
index 4d5f6fc..697b27b 100644
--- a/term.c
+++ b/term.c
@@ -597,10 +597,12 @@ static void setattr(int m)
 		if ((m / 10) == 3) {
 			fg = m > 37 ? FGCOLOR : clrmap(m - 30);
 			fg |= (FN_IS16 | ((m - 30) << 28));
+			fg |= FN_FROM8CODE;
 		}
 		if ((m / 10) == 4) {
 			bg = m > 47 ? BGCOLOR : clrmap(m - 40);
 			bg |= (FN_IS16 | ((m - 40) << 28));
+			bg |= FN_FROM8CODE;
 		}
 		if ((m / 10) == 9)
 			fg = clrmap(8 + m - 90);
-- 
2.8.0

