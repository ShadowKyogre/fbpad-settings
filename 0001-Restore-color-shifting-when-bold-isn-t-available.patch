From 50f3da507081bd42de5f966f2ca74097fbca7277 Mon Sep 17 00:00:00 2001
From: ShadowKyogre <shadowkyogre.public@gmail.com>
Date: Thu, 5 May 2016 01:52:49 -0700
Subject: [PATCH] Restore color shifting when bold isn't available

The change that broke color shifting when a bold font. This fixes that
by using the remaining first four bits for storing the 16 palette color.
It also uses one of the bits as a flag to indicate it is a color that
came from the palette.

Additionally, color shifting for bolding is optionally enabled with
\#define BOLD_SHIFTS_COLOR in conf.h. You may use #undef BOLD_SHIFTS_COLOR to
disable it explicitly and/or just remove the #define statement.
---
 conf.h  |  2 ++
 fbpad.h |  3 +++
 pad.c   |  6 ++++++
 term.c  | 14 +++++++++++---
 4 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/conf.h b/conf.h
index 463e580..f875626 100644
--- a/conf.h
+++ b/conf.h
@@ -55,3 +55,5 @@ typedef unsigned int fbval_t;
 /* white */
 #define COLOR7		0xaaaaaa
 #define COLORF		0xffffff
+
+#define BOLD_SHIFTS_COLOR
diff --git a/fbpad.h b/fbpad.h
index 2cd3193..9111c7a 100644
--- a/fbpad.h
+++ b/fbpad.h
@@ -48,11 +48,14 @@ void term_end(void);
 void term_screenshot(void);
 void term_scrl(int pos);
 void term_redraw(int all);
+int  clrmap(int c);
 
 /* pad.c */
 #define FN_I		0x01000000	/* italic font */
 #define FN_B		0x02000000	/* bold font */
+#define FN_IS16	0x04000000	/* are we a 16 color? */
 #define FN_C		0x00ffffff	/* font color mask */
+#define FN_16PAL	0xf0000000	/* 16 color value */
 
 int pad_init(void);
 void pad_free(void);
diff --git a/pad.c b/pad.c
index 6db7830..8caf7fc 100644
--- a/pad.c
+++ b/pad.c
@@ -139,6 +139,12 @@ void pad_put(int ch, int r, int c, int fg, int bg)
 	int sc = fncols * c;
 	fbval_t *bits;
 	int i;
+	#ifdef BOLD_SHIFTS_COLOR
+	if ((fg & FN_B) && (fg & FN_IS16) && ((fg & FN_16PAL) >> 28) < 8)
+	#else
+	if ((fg & FN_B) && !fonts[2] && (fg & FN_IS16) && ((fg & FN_16PAL) >> 28) < 8)
+	#endif
+		fg = clrmap(((fg & FN_16PAL) >> 28) + 8);
 	bits = ch2fb(fnsel(fg, bg), ch, fg, bg);
 	if (!bits)
 		bits = ch2fb(0, ch, fg, bg);
diff --git a/term.c b/term.c
index 371ff74..4d5f6fc 100644
--- a/term.c
+++ b/term.c
@@ -43,7 +43,7 @@ static unsigned int clr16[16] = {
 	COLOR8, COLOR9, COLORA, COLORB, COLORC, COLORD, COLORE, COLORF,
 };
 
-static int clrmap(int c)
+int clrmap(int c)
 {
 	int g = (c - 232) * 10 + 8;
 	if (c < 16) {
@@ -594,10 +594,14 @@ static void setattr(int m)
 		mode &= ~ATTR_REV;
 		break;
 	default:
-		if ((m / 10) == 3)
+		if ((m / 10) == 3) {
 			fg = m > 37 ? FGCOLOR : clrmap(m - 30);
-		if ((m / 10) == 4)
+			fg |= (FN_IS16 | ((m - 30) << 28));
+		}
+		if ((m / 10) == 4) {
 			bg = m > 47 ? BGCOLOR : clrmap(m - 40);
+			bg |= (FN_IS16 | ((m - 40) << 28));
+		}
 		if ((m / 10) == 9)
 			fg = clrmap(8 + m - 90);
 		if ((m / 10) == 10)
@@ -1000,6 +1004,8 @@ static void csiseq(void)
 			}
 			if (args[i] == 38) {
 				fg = clrmap(args[i + 2]);
+				if (args[i + 2] < 16)
+					fg |= (FN_IS16 | (args[i + 2] << 28));
 				i += 2;
 				continue;
 			}
@@ -1011,6 +1017,8 @@ static void csiseq(void)
 			}
 			if (args[i] == 48) {
 				bg = clrmap(args[i + 2]);
+				if (args[i + 2] < 16)
+					bg |= (FN_IS16 | (args[i + 2] << 28));
 				i += 2;
 				continue;
 			}
-- 
2.8.0

